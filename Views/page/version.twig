<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>Youtube V3 api Search youtube video demo</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="../../youtube-dj-master/assets/css/pretty-json.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" />
    {#<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" type="text/css" />#}
    <link rel="stylesheet" href="../../youtube-dj-master/assets/css/style2.css" type="text/css">
    <link rel="stylesheet" href="../../youtube-dj-master/assets/css/jquery-ui.css" type="text/css">
    <link rel="stylesheet" href="../../youtube-dj-master/assets/css/reset.css" type="text/css">
    <link rel="stylesheet" href="../../youtube-dj-master/assets/css/range.scss" type="text/css">
    <link rel="stylesheet" href="../../youtube-dj-master/assets/css/range.less" type="text/css">

    <script src="//code.jquery.com/jquery-2.1.4.js" type="text/javascript"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js" type="text/javascript"></script>
    <script type="text/javascript" src="../../youtube-dj-master/assets/js/underscore-min.js"></script>
    <script type="text/javascript" src="../../youtube-dj-master/assets/js/backbone-min.js"></script>
    <script type="text/javascript" src="../../youtube-dj-master/assets/js/pretty-json-min.js"></script>
</head>

<body>
    <section id="players-container">
        <div class="player-container">
            <h2>Player 1</h2>
            <div id="player"></div>
            <div class="arrow-block"></div>
        </div>
        <div class="crossfader">
            <input type='range' min="0" max="100" value="0" id="input-fader"/>
        </div>
        <div class="player-container">
            <h2>Player 2</h2>
            <div id="player2"></div>
            <div class="arrow-block"></div>
        </div>
    </section>
    <section id="search-and-related">
        <div class="list-videos-block list-related-block" id="related-content-1">
            <div class="title-container">
                <h2>Related videos</h2>
            </div>
            <div class="list-video">
                <ul id="list-video-related-container">
                </ul>
                <div class="clear"></div>
            </div>
        </div>
        
        <div class="list-videos-block list-search-block">
            <div class="input-search-container">
                <input type="text" placeholder="Search..." id="button-search" value="The weeknd">
                <button class="icon" id="go-button">GO</button>
            </div>
            <div class="list-video">
                <h4>Results</h4>
                <ul id="list-video-container">
                </ul>
                <div>
                    <input type="hidden" id="pageToken" value="">
                    <div class="btn-group" role="group" aria-label="...">
                        <button type="button" id="pageTokenPrev" value="" class="button-page">Prev</button>
                        <button type="button" id="pageTokenNext" value="" class="button-page">Next</button>
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>

        <div class="list-videos-block list-related-block" id="related-content-2">
            <div class="title-container">
                <h2>Related videos</h2>
            </div>
            <div class="list-video">
                <ul id="list-video-related-container-2">
                </ul>
                <div class="clear"></div>
            </div>
        </div>
    </section>

    <script>
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        var tag2 = document.createElement('script');

        tag2.src = "https://www.youtube.com/iframe_api";
        var secondScriptTag = document.getElementsByTagName('script')[1];
        secondScriptTag.parentNode.insertBefore(tag2, secondScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        var player2;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                videoId: 'JPIhUaONiLU',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange,
                    'onError': onPlayerError
                }
            });

            player2 = new YT.Player('player2', {
                videoId: 'Ekqu_Ku7nuY',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange,
                    'onError': onPlayerError
                }
            });
        }



        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {

        }
        function stopVideo() {
            player.stopVideo();
        }

        function onPlayerError() {
            alert('This video doesn\t exist');
        }


        $(document).ready(function() {
            youtubeApiCall();
            $("#pageTokenNext").on( "click", function( event ) {
                $("#pageToken").val($("#pageTokenNext").val());
                youtubeApiCall();
            });
            $("#pageTokenPrev").on( "click", function( event ) {
                $("#pageToken").val($("#pageTokenPrev").val());
                youtubeApiCall();
            });
            $("#go-button").on( "click", function( event ) {
                $("#pageToken").val('');
                youtubeApiCall();
                return false;
            });

            $(".url-search-button").click(function () {
                var newVideoValue = $('.url-search').val();
                var newVidId = newVideoValue.substr(newVideoValue.indexOf("=") + 1);
                console.log(newVidId);
                updateVideo(newVidId);
                youtubeApiGetVideoRelated(newVidId);
            });

            $(document).on( "click", '.loadNewVideo' ,function() {
                var newVidId = $(this).attr('data-value');
                var idButton = $(this).attr('data-id');
                console.log(idButton);
                var idPlayer = idButton.substr(idButton.indexOf("-") + 1);

                updateVideo(newVidId, idPlayer);
                youtubeApiGetVideoRelated(newVidId, idPlayer);
            });

            $(document).on( "mouseenter", '.video-container img' ,function() {
                $(this).prev().fadeIn("fast");            });

            $(document).on( "mouseleave", '.video-container .button-filter' ,function() {
                $(this).removeClass('active');
            });

            $(document).on( "mouseleave", '.video-container .filter' ,function() {
                $(this).fadeOut("fast");
            });



            $(document).on( "mouseenter", '.video-container #addTo-1' ,function() {
                $(this).addClass('active');
            });

            $(document).on( "mouseleave", '.video-container #addTo-1' ,function() {
                $(this).removeClass('active');
            });

            $(document).on( "mouseenter", '.video-container #addTo-2' ,function() {
                $(this).addClass('active');
            });

            $(document).on( "mouseleave", '.video-container #addTo-2' ,function() {
                $(this).removeClass('active');
            });

            $('#input-fader').on("change mousemove", function() {
                //console.log($(this).val());
                var volumeP1 =  (100 - $(this).val());
                player.setVolume(volumeP1);
                player2.setVolume($(this).val());
            });


            jQuery( "#button-search" ).autocomplete({
                source: function( request, response ) {
                    //console.log(request.term);
                    var sqValue = [];
                    jQuery.ajax({
                        type: "POST",
                        url: "http://suggestqueries.google.com/complete/search?hl=en&ds=yt&client=youtube&hjson=t&cp=1",
                        dataType: 'jsonp',
                        data: jQuery.extend({
                            q: request.term
                        }, {  }),
                        success: function(data){
                            //console.log(data[1]);
                            obj = data[1];
                            jQuery.each( obj, function( key, value ) {
                                sqValue.push(value[0]);
                            });
                            response( sqValue);
                        }
                    });
                },
                select: function( event, ui ) {
                    setTimeout( function () {
                        $("#pageToken").val('');
                        youtubeApiCall();
                    }, 300);
                }
            });
        });
        function youtubeApiCall(){
            $.ajax({
                cache: false,
                data: $.extend({
                    key: "{{ keyDev }}",
                    q: $('#button-search').val(),
                    part: 'id , snippet'
                }, {maxResults:20,pageToken:$("#pageToken").val(), type: 'video'}),
                dataType: 'json',
                type: 'GET',
                timeout: 5000,
                url: 'https://www.googleapis.com/youtube/v3/search'
            })
                    .done(function(data) {
                        if (typeof data.prevPageToken === "undefined") {$("#pageTokenPrev").hide();}else{$("#pageTokenPrev").show();}
                        if (typeof data.nextPageToken === "undefined") {$("#pageTokenNext").hide();}else{$("#pageTokenNext").show();}
                        var items = data.items, videoList = "";
                        $("#pageTokenNext").val(data.nextPageToken);
                        $("#pageTokenPrev").val(data.prevPageToken);
                        $.each(items, function(index,e) {
                            console.log(e);
                            videoList = videoList + '<li><div class="video-container" id="'+e.id.videoId+'"><div class="filter">'+'<div class="loadNewVideo button-filter" id="addTo-1" data-id="add-1" data-value="'+e.id.videoId+'"><p>Add to player 1</p></div><div class="loadNewVideo button-filter" id="addTo-2" data-id="add-2" data-value="'+e.id.videoId+'"><p>Add to player 2</p></div></div><img src="'+e.snippet.thumbnails.high.url+'" alt="'+e.snippet.title+'" width="120" height="90"><div class="queue-button"><p>Add to queue</p></div><h3>'+e.snippet.title+'</h3></div></li>';
                        });
                        $("#list-video-container").html(videoList);
                    });
        }

        function updateVideo(videoId, id) {
            if(id == 1){
                player.cueVideoById( videoId, "large");
            }
            else{
                player2.cueVideoById( videoId, "large");

            }
        }

        function youtubeApiGetVideoRelated(videoId, idPlayer){

            $.ajax({
                cache: false,
                data: $.extend({
                    key: "{{ keyDev }}",
                    q: videoId,
                    part: 'id , snippet'
                },{ relatedToVideoId: videoId ,maxResults:20,pageToken:$("#pageToken").val(), type: 'video'}),
                dataType: 'json',
                type: 'GET',
                timeout: 5000,
                url: 'https://www.googleapis.com/youtube/v3/search'
            })
                    .done(function(data) {
                        var items = data.items, videoListRelated = "";
                        $.each(items, function(index,e) {
                            console.log(e);
                            videoListRelated = videoListRelated + '<li><div class="video-container" id="'+e.id.videoId+'"><div class="filter"><div class="loadNewVideo button-filter" id="addTo-1" data-id="add-1" data-value="'+e.id.videoId+'"><p>Add to player 1</p></div><div class="loadNewVideo button-filter" id="addTo-2" data-id="add-2" data-value="'+e.id.videoId+'"><p>Add to player 2</p></div></div><img src="'+e.snippet.thumbnails.high.url+'" alt="'+e.snippet.title+'" width="120" height="90"><div class="queue-button"><p>Add to queue</p></div><h3>'+e.snippet.title+'</h3></div></li>';

                        });
                        if (idPlayer == 1){
                            $("#list-video-related-container").html(videoListRelated);
                        }
                        else{
                            $("#list-video-related-container-2").html(videoListRelated);
                        }
                    });
        }



        var s = document.createElement('style'),
                r = document.querySelector('input[type=range]'),
                prefs = ['webkit-slider-runnable', 'moz-range'];

        document.body.appendChild(s);

        var getTrackStyleStr = function(el, val) {
            var str = '', len = prefs.length;

            for(var i = 0; i < len; i++) {
                str += '.js input[type=range]:focus::-' + prefs[i] + '-track{background-size:' + val + '}'
            }

            return str;
        };

        var getTipStyleStr = function(el, val) {
            var str = '.js input[type=range]:focus /deep/ #thumb:after{content:"' +
                    val + '"}';

            return str;
        };

        var getValStr = function(el, p) {
            var min = el.min || 0,
                    perc = (el.max) ? ~~(100*(p - min)/(el.max - min)) : p,
                    val = '20% 100%, ' + perc + '% 100%';

            return val;
        };

        r.addEventListener('input', function() {
            s.textContent = getTrackStyleStr(
                    this,
                    getValStr(this, this.value)
            );
            s.textContent += getTipStyleStr(this, this.value);
        }, false);


    </script>
</body>
</html>